.MODEL LARGE

STACK SEGMENT PARA STACK

	DB 100H DUP(' ')

STACK ENDS

DATA SEGMENT PARA 'DATA'

	MSG1 DB 'GAME OVER YOU WON! ^_^$'
	MSG2 DB 10, 13, 'TYPE BRICKER BELOW TO RESTART! :D$'
	MSG3 DB 'GAME OVER YOU LOST! ;-;$'
	MSG4 DB 10, 13, 'YOU MISSED THREE SHOTS :"($'

	WIN_WIDTH_MIN DW 14H		;THE MINIMUM WIDTH OF THE WINDOW
	WIN_HEIGHT_MIN DW 00H		;THE MINIMUM HEIGHT OF THE WINDOW
	WIN_WIDTH_MAX DW 12CH		;THE MAXIMUM WIDTH OF THE WINDOW
	WIN_HEIGHT_MAX DW 0C8H		;THE MAXIMUM HEIGHT OF THE WINDOW
	
	TIME DB 0					;TIME VARIABLE FOR FPS
	
	BRICKS_HIT DB 0				;NUMBER OF BRICKS HIT
	SHOT_MISSED DB 0			;NUMBER OF SHOT MISSED
	
	BAR_X DW 00H				;INITIAL X COORDINATE FOR THE PROGRESS BAR
	BAR_Y DW 00H				;INITIAL Y COORDINATE FOR THE PROGRESS BAR
	BAR_HEIGHT DW 05H
	BAR_WIDTH DW 00H			;WILL INCREASE(BY 10) ACCORDING TO THE NUMBER OF BRICKS TAKEN DOWN
	BAR_COLOR DB 0FH			;WHITE
	BAR_INC DW 0AH
	
	BODY_X DW 08CH				;INITIAL X COORDINATE FOR THE BODY
	BODY_Y DW 0B4H				;INITIAL Y COORDINATE FOR THE BODY
	BODY_HEIGHT DW 0AH
	BODY_WIDTH DW 28H
	BODY_COLOR DB 08H			;DARK GRAY
	
	BRICK_1_X DW 14H			;INITIAL X COORDINATE FOR THE 1ST BRICK
	BRICK_1_Y DW 25H			;INITIAL Y COORDINATE FOR THE 1ST BRICK
	BRICK_1_HEIGHT DW 0AH
	BRICK_1_WIDTH DW 28H
	BRICK_1_COLOR DB 01H		;BLUE
	
	BRICK_2_X DW 8CH			;INITIAL X COORDINATE FOR THE 2ND BRICK
    	BRICK_2_Y DW 25H			;INITIAL Y COORDINATE FOR THE 2ND BRICK 
	BRICK_2_HEIGHT DW 0AH
	BRICK_2_WIDTH DW 28H
	BRICK_2_COLOR DB 06H		;BROWN
	
	BRICK_3_X DW 104H			;INITIAL X COORDINATE FOR THE 3RD BRICK
	BRICK_3_Y DW 025H			;INITIAL Y COORDINATE FOR THE 3RD BRICK
	BRICK_3_HEIGHT DW 0AH
	BRICK_3_WIDTH DW 28H
	BRICK_3_COLOR DB 04H		;RED
	
	BRICK_4_X DW 14H			;INITIAL X COORDINATE FOR THE 4TH BRICK
	BRICK_4_Y DW 44H			;INITIAL Y COORDINATE FOR THE 4TH BRICK
	BRICK_4_HEIGHT DW 0AH
	BRICK_4_WIDTH DW 28H
	BRICK_4_COLOR DB 09H		;LIGHT BLUE
	
	BRICK_5_X DW 8CH			;INITIAL X COORDINATE FOR THE 5TH BRICK
	BRICK_5_Y DW 44H			;INITIAL Y COORDINATE FOR THE 5TH BRICK
	BRICK_5_HEIGHT DW 0AH
	BRICK_5_WIDTH DW 28H
	BRICK_5_COLOR DB 0AH		;LIGHT GREEN
	
	BRICK_6_X DW 104H			;INITIAL X COORDINATE FOR THE 6TH BRICK
	BRICK_6_Y DW 44H			;INITIAL Y COORDINATE FOR THE 6TH BRICK
	BRICK_6_HEIGHT DW 0AH
	BRICK_6_WIDTH DW 28H
	BRICK_6_COLOR DB 0BH		;LIGHT CYAN
	
	GUN_X DW ?					;RELATIVE TO BODY_X
	GUN_Y DW ?					;RELATIVE TO BODY_Y
	GUN_LENGTH DW 01H
	GUN_HEIGHT DW 04H
	GUN_VELOCITY DW 0AH
	GUN_COLOR DB 0EH			;YELLOW
	
	

DATA ENDS

CODE SEGMENT PARA 'CODE'

	MAIN PROC FAR
	
	ASSUME CS:CODE, DS:DATA, SS:STACK
	PUSH DS
	XOR AX, AX
	PUSH AX
	MOV AX, DATA
	MOV DS, AX
	POP AX
	POP AX
		
		CALL REFRESH
		
		CALL DRAW_BODY
		CALL DRAW_BAR
		CALL DRAW_BRICK_1
		CALL DRAW_BRICK_2
		CALL DRAW_BRICK_3
		CALL DRAW_BRICK_4
		CALL DRAW_BRICK_5
		CALL DRAW_BRICK_6
		
		CALL PLAY				
		
	MAIN ENDP
	
	PLAY PROC NEAR
	
		;INPUT STAGE TO MOVE THE BODY LEFT/RIGHT AND SHOOT
		INPUT:
		MOV AH, 00H
		INT 16H
		
		;LEFT ARROW
		LEFT:
		CMP AX, 4B00H
		JNE RIGHT
		
		;CHECK WHETHER LEFT MOST X-COORDINATE DOESN'T SURPASS THE MIN WIDTH OF THE WINDOW
		MOV AX, BODY_X
		CMP AX, WIN_WIDTH_MIN
		JE INPUT
		SUB BODY_X, 14H
		
		CALL REFRESH
		CALL DRAW_BAR
		CALL DRAW_BODY
		CALL DRAW_BRICK_1
		CALL DRAW_BRICK_2
		CALL DRAW_BRICK_3
		CALL DRAW_BRICK_4
		CALL DRAW_BRICK_5
		CALL DRAW_BRICK_6
		
		JMP INPUT
		
		;RIGHT ARROW
		RIGHT:	
		CMP AX, 4D00H
		JNE SPACE
		
		;CHECK WHETHER RIGHT MOST X-COORDINATE DOESN'T SURPASS THE MAX WIDTH OF THE WINDOW
		MOV BX, BODY_X
		
		INCREMENT_TO_MAX_X:
		INC BX
		
		MOV AX, BX
		SUB AX, BODY_X
		CMP AX, BODY_WIDTH
		JNE INCREMENT_TO_MAX_X
		
		CMP BX, WIN_WIDTH_MAX
		JE INPUT
		ADD BODY_X, 14H
		
		CALL REFRESH
		CALL DRAW_BAR
		CALL DRAW_BODY
		CALL DRAW_BRICK_1
		CALL DRAW_BRICK_2
		CALL DRAW_BRICK_3
		CALL DRAW_BRICK_4
		CALL DRAW_BRICK_5
		CALL DRAW_BRICK_6
		
		JMP INPUT
		
		;SPACEBAR
		SPACE:
		CMP AX, 3920H
		JNE ESCAPE
		MOV GUN_COLOR, 0EH		;CHANGING THE GUN COLOR BACK TO ORIGINAL
		CALL SHOOT
		JMP INPUT
		
		;ESCAPE
		ESCAPE:		
		CMP AX, 011BH
		JE EXIT2
		JMP INPUT
		
		EXIT2:
		MOV AH, 04CH			;FOR QUITING GAME OR RESTARTING
		INT 21H
		
	
	PLAY ENDP
	
	DETECT_BRICK PROC NEAR
	
		MOV AH, 0DH
		INT 10H
		
		CMP AL, 01H				;CHECKING 1ST BRICK
		JE FIRST_BRICK_HIT
		JNE CHECK_2ND_BRICK
		
		CHECK_2ND_BRICK:
		CMP AL, 06H				;CHECKING 2ND BRICK
		JE SECOND_BRICK_HIT
		JNE CHECK_3RD_BRICK
		
		CHECK_3RD_BRICK:
		CMP AL, 04H				;CHECKING 3RD BRICK
		JE THIRD_BRICK_HIT
		JNE CHECK_4TH_BRICK
		
		CHECK_4TH_BRICK:
		CMP AL, 09H				;CHECKING 4TH BRICK
		JE FOURTH_BRICK_HIT
		JNE CHECK_5TH_BRICK
		
		CHECK_5TH_BRICK:
		CMP AL, 0AH				;CHECKING 5TH BRICK
		JE FIFTH_BRICK_HIT
		JNE CHECK_6TH_BRICK
		
		CHECK_6TH_BRICK:
		CMP AL, 0BH				;CHECKING 6TH BRICK
		JE CLOSE_SIXTH_BRICK_HIT
		
		RET
		
		FIRST_BRICK_HIT:
		MOV BRICK_1_COLOR, 00H
		MOV GUN_COLOR, 00H
		CALL DRAW_BRICK_1
		CALL MODIFY
		CALL DRAW_BAR
		CALL DRAW_GUN
		CALL  PLAY
		
		SECOND_BRICK_HIT:
		MOV BRICK_2_COLOR, 00H
		MOV GUN_COLOR, 00H
		CALL DRAW_BRICK_2
		CALL MODIFY
		CALL DRAW_BAR
		CALL DRAW_GUN
		CALL PLAY
		
		THIRD_BRICK_HIT:
		MOV BRICK_3_COLOR, 00H
		MOV GUN_COLOR, 00H
		CALL DRAW_BRICK_3
		CALL MODIFY
		CALL DRAW_BAR
		CALL DRAW_GUN
		CALL PLAY
		
		FOURTH_BRICK_HIT:
		MOV BRICK_4_COLOR, 00H
		MOV GUN_COLOR, 00H
		CALL DRAW_BRICK_4
		CALL MODIFY
		CALL DRAW_BAR
		CALL DRAW_GUN
		CALL PLAY
		
		CLOSE_SIXTH_BRICK_HIT:
		JMP SIXTH_BRICK_HIT
		
		FIFTH_BRICK_HIT:
		MOV BRICK_5_COLOR, 00H
		MOV GUN_COLOR, 00H
		CALL DRAW_BRICK_5
		CALL MODIFY
		CALL DRAW_BAR
		CALL DRAW_GUN
		CALL PLAY
		
		SIXTH_BRICK_HIT:
		MOV BRICK_6_COLOR, 00H
		MOV GUN_COLOR, 00H
		CALL DRAW_BRICK_6
		CALL MODIFY
		CALL DRAW_BAR
		CALL DRAW_GUN
		CALL PLAY
	
	DETECT_BRICK ENDP
	
	MODIFY PROC NEAR
		
		MOV BX, BAR_INC	
		ADD BAR_WIDTH, BX
		INC BRICKS_HIT
		
		CMP BAR_WIDTH, 140H				;CHECKING WHETHER THE BAR IS FULL
		JE GAME_END
		
		CMP BRICKS_HIT, 06H				;CHECKING IF ALL THE BRICKS BROKE
		JE RESET
		
		RET
		
		;WIN
		GAME_END:			
		
		CALL REFRESH
		
		MOV AH, 09H
		LEA DX, MSG1
		INT 21H
		
		LEA DX, MSG2
		INT 21H
		
		MOV AH, 04CH
		INT 21H
		
		;RESETTING THE ENVIRONMENT
		RESET:
		
		MOV BRICK_1_COLOR, 01H
		MOV BRICK_2_COLOR, 06H
		MOV BRICK_3_COLOR, 04H
		MOV BRICK_4_COLOR, 09H
		MOV BRICK_5_COLOR, 0AH
		MOV BRICK_6_COLOR, 0BH
		
		MOV BRICKS_HIT, 00H
		
		RET
	
	MODIFY ENDP
	
	SHOOT PROC NEAR
		
		MOV BX, BODY_X
		MOV GUN_X, BX
		MOV BX, BODY_Y
		MOV GUN_Y, BX
		ADD GUN_X, 14H
	
		FPS:
		
		MOV AH, 2CH
		INT 21H
		
		CMP DL, TIME
		JE FPS
		
		MOV TIME, DL
		
		MOV BX, WIN_HEIGHT_MIN
		CMP GUN_Y, BX
		JE EXIT
		
		MOV AX, GUN_VELOCITY
		SUB GUN_Y, AX

		CALL REFRESH
		CALL DRAW_BAR
		CALL DRAW_BODY
		CALL DRAW_BRICK_1
		CALL DRAW_BRICK_2
		CALL DRAW_BRICK_3
		CALL DRAW_BRICK_4
		CALL DRAW_BRICK_5
		CALL DRAW_BRICK_6
		CALL DRAW_GUN
		CALL DETECT_BRICK
		
		JMP FPS
		
		EXIT:
		
		INC SHOT_MISSED
		CMP SHOT_MISSED, 03H
		
		JE GAME_OVER
		
		RET
		
		;LOST
		GAME_OVER:
		CALL REFRESH
		
		MOV AH, 09H
		LEA DX, MSG3
		INT 21H
		
		LEA DX, MSG4
		INT 21H
		
		LEA DX, MSG2
		INT 21H
		
		MOV AH, 04CH
		INT 21H
	
	SHOOT ENDP	
	
	DRAW_BAR PROC NEAR
		
		MOV CX, BAR_X
		MOV DX, BAR_Y 
		
		BAR_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BAR_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		MOV AX, CX
		SUB AX, BAR_X
		CMP AX, BAR_WIDTH
		JNG BAR_HORIZONTAL
		
		MOV CX, BAR_X
		
		INC DX
		MOV AX, DX
		SUB AX, BAR_Y
		CMP AX, BAR_HEIGHT
		JNG BAR_HORIZONTAL
		
		RET
	
	DRAW_BAR ENDP
	
	DRAW_GUN PROC NEAR
		
		MOV CX, GUN_X
		MOV DX, GUN_Y 
		
		GUN_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, GUN_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		MOV AX, CX
		SUB AX, GUN_X
		CMP AX, GUN_LENGTH
		JNG GUN_HORIZONTAL
		
		MOV CX, GUN_X
		
		INC DX
		MOV AX, DX
		SUB AX, GUN_Y
		CMP AX, GUN_HEIGHT
		JNG GUN_HORIZONTAL
		
		RET
	
	DRAW_GUN ENDP
	
	DRAW_BODY PROC NEAR
	
		MOV CX, BODY_X
		MOV DX, BODY_Y
		
		BODY_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BODY_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BODY_X
		CMP AX, BODY_WIDTH
		JNG BODY_HORIZONTAL
		
		MOV CX, BODY_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BODY_Y
		CMP AX, BODY_HEIGHT
		JNG BODY_HORIZONTAL
		
		RET
	
	DRAW_BODY ENDP
	
	DRAW_BRICK_1 PROC NEAR
	
		MOV CX, BRICK_1_X
		MOV DX, BRICK_1_Y
		
		BRICK_1_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BRICK_1_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BRICK_1_X
		CMP AX, BRICK_1_WIDTH
		JNG BRICK_1_HORIZONTAL
		
		MOV CX, BRICK_1_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BRICK_1_Y
		CMP AX, BRICK_1_HEIGHT
		JNG BRICK_1_HORIZONTAL
		
		RET
		
	DRAW_BRICK_1 ENDP
	
	DRAW_BRICK_2 PROC NEAR
	
		MOV CX, BRICK_2_X
		MOV DX, BRICK_2_Y
		
		BRICK_2_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BRICK_2_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BRICK_2_X
		CMP AX, BRICK_2_WIDTH
		JNG BRICK_2_HORIZONTAL
		
		MOV CX, BRICK_2_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BRICK_2_Y
		CMP AX, BRICK_2_HEIGHT
		JNG BRICK_2_HORIZONTAL
		
		RET
	
	DRAW_BRICK_2 ENDP
	
	DRAW_BRICK_3 PROC NEAR
	
		MOV CX, BRICK_3_X
		MOV DX, BRICK_3_Y
		
		BRICK_3_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BRICK_3_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BRICK_3_X
		CMP AX, BRICK_3_WIDTH
		JNG BRICK_3_HORIZONTAL
		
		MOV CX, BRICK_3_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BRICK_3_Y
		CMP AX, BRICK_3_HEIGHT
		JNG BRICK_3_HORIZONTAL
		
		RET
	
	DRAW_BRICK_3 ENDP
	
	DRAW_BRICK_4 PROC NEAR
	
		MOV CX, BRICK_4_X
		MOV DX, BRICK_4_Y
		
		BRICK_4_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BRICK_4_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BRICK_4_X
		CMP AX, BRICK_4_WIDTH
		JNG BRICK_4_HORIZONTAL
		
		MOV CX, BRICK_4_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BRICK_4_Y
		CMP AX, BRICK_4_HEIGHT
		JNG BRICK_4_HORIZONTAL
		
		RET
	
	DRAW_BRICK_4 ENDP
	
	DRAW_BRICK_5 PROC NEAR
	
		MOV CX, BRICK_5_X
		MOV DX, BRICK_5_Y
		
		BRICK_5_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BRICK_5_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BRICK_5_X
		CMP AX, BRICK_5_WIDTH
		JNG BRICK_5_HORIZONTAL
		
		MOV CX, BRICK_5_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BRICK_5_Y
		CMP AX, BRICK_5_HEIGHT
		JNG BRICK_5_HORIZONTAL
		
		RET
	
	DRAW_BRICK_5 ENDP
	
	DRAW_BRICK_6 PROC NEAR
	
		MOV CX, BRICK_6_X
		MOV DX, BRICK_6_Y
		
		BRICK_6_HORIZONTAL:
		
		MOV AH, 0CH
		MOV AL, BRICK_6_COLOR
		MOV BH, 00H
		INT 10H
		
		INC CX
		
		MOV AX, CX
		SUB AX, BRICK_6_X
		CMP AX, BRICK_6_WIDTH
		JNG BRICK_6_HORIZONTAL
		
		MOV CX, BRICK_6_X
		
		INC DX
		
		MOV AX, DX
		SUB AX, BRICK_6_Y
		CMP AX, BRICK_6_HEIGHT
		JNG BRICK_6_HORIZONTAL
		
		RET
	
	DRAW_BRICK_6 ENDP
	
	REFRESH PROC NEAR

		MOV AH, 00H
		MOV AL, 13H
		INT 10H
		
		MOV AH, 0BH
		MOV BH, 00H
		MOV BL, 00H
		INT 10H
		
		RET
	
	REFRESH ENDP

CODE ENDS
END
